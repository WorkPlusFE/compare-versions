{"version":3,"file":null,"sources":["../index.js"],"sourcesContent":["'use strict';\n\n/**\n * Transform version to string\n *\n * @param {array} version\n * @param {number} [len=10]\n */\nconst transformVersion = (version, len = 10) => version.map(val => '0'.repeat(len - val.length) + val).join('.');\n\n/**\n * Compare Versions\n * \n * Please make sure the version type is consistent.\n *\n * @param {string} a version\n * @param {string} b another version\n * @param {number} c string length, default 10\n * \n * if a > b, return 1\n * if a === b, return 0\n * if a < b, return -1\n * if (versions type is inconsistent) return null\n */\nconst compareVersions = (a, b, c) => {\n  const aArray = a.split('.');\n  const bArray = b.split('.');\n  if (aArray.length !== bArray.length) {\n    console.error(`[CompareVersions]: ${a}/${b}, the Versions type is inconsistent.`);\n    return null;\n  }\n  const aStr = transformVersion(aArray, c);\n  const bStr = transformVersion(bArray, c);\n\n  if (aStr > bStr) return 1;\n  if (aStr === bStr) return 0;\n  return -1;\n};\n\nexport default compareVersions;"],"names":["transformVersion","version","len","map","repeat","val","length","join","compareVersions","a","b","c","aArray","split","bArray","error","aStr","bStr"],"mappings":";;;;;;;AAEA;;;;;;;AAMA,IAAMA,mBAAmB,SAAnBA,gBAAmB,CAACC,OAAD;MAAUC,GAAV,uEAAgB,EAAhB;SAAuBD,QAAQE,GAAR,CAAY;WAAO,IAAIC,MAAJ,CAAWF,MAAMG,IAAIC,MAArB,IAA+BD,GAAtC;GAAZ,EAAuDE,IAAvD,CAA4D,GAA5D,CAAvB;CAAzB;;;;;;;;;;;;;;;;AAgBA,IAAMC,kBAAkB,SAAlBA,eAAkB,CAACC,CAAD,EAAIC,CAAJ,EAAOC,CAAP,EAAa;MAC7BC,SAASH,EAAEI,KAAF,CAAQ,GAAR,CAAf;MACMC,SAASJ,EAAEG,KAAF,CAAQ,GAAR,CAAf;MACID,OAAON,MAAP,KAAkBQ,OAAOR,MAA7B,EAAqC;YAC3BS,KAAR,yBAAoCN,CAApC,SAAyCC,CAAzC;WACO,IAAP;;MAEIM,OAAOhB,iBAAiBY,MAAjB,EAAyBD,CAAzB,CAAb;MACMM,OAAOjB,iBAAiBc,MAAjB,EAAyBH,CAAzB,CAAb;;MAEIK,OAAOC,IAAX,EAAiB,OAAO,CAAP;MACbD,SAASC,IAAb,EAAmB,OAAO,CAAP;SACZ,CAAC,CAAR;CAZF,CAeA;;"}